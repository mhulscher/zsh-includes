#!/usr/bin/perl

use strict;
use warnings;

use JSON;
use Text::ASCIITable;

my $data = decode_json(`kubectl get nodes -o json | jq -Mc .`);

my $cl = Text::ASCIITable->new();
$cl->setCols(qw(CPU MEM POD GPU));
$cl->setOptions(headingText => 'Cluster Resources');

my $tb = Text::ASCIITable->new();
$tb->setCols('Node','Capacity','Labels','Annotations');
$tb->setOptions(drawRowLine => 1);

my $cpu = 0;
my $mem = 0;
my $pod = 0;
my $gpu = 0;

foreach my $node (@{$data->{'items'}}) {
  $cpu += $node->{'status'}{'capacity'}{'cpu'};
  $mem += (map { s/Ki$//; int($_ / 1000000) } $node->{'status'}{'capacity'}{'memory'})[0];
  $pod += $node->{'status'}{'capacity'}{'pods'};
  $gpu += $node->{'status'}{'capacity'}{'alpha.kubernetes.io/nvidia-gpu'};

  $tb->addRow([
      $node->{'metadata'}{'name'},
      "CPU: " . $node->{'status'}{'capacity'}{'cpu'} . "\n" .
      "MEM: " . (map { s/Ki$//; int($_ / 1000000) . "G" } $node->{'status'}{'capacity'}{'memory'})[0] . "\n" .
      "POD: " . $node->{'status'}{'capacity'}{'pods'} . "\n" .
      "GPU: " . $node->{'status'}{'capacity'}{'alpha.kubernetes.io/nvidia-gpu'},
      join("\n", map { "$_: " . $node->{'metadata'}{'labels'}{$_} } sort keys %{$node->{'metadata'}{'labels'}}),
      join("\n", map { "$_: " . $node->{'metadata'}{'annotations'}{$_} } sort keys %{$node->{'metadata'}{'annotations'}}),
    ]);
}

$cl->addRow($cpu, $mem . "G", $pod, $gpu);
print $cl;
print $tb;
